How do we go from a conversation where we're manually entering things in into an AI agent? Well, the key thing that we do is we build an agent loop. And an agent loop is a really simple construct that I'm going to walk you through, but we have to pay attention to the details of this loop. We have to understand how it works. And so we're going to take a look at how do we go from a conversation to an AI agent by creating a loop programmatically. So we're going to walk through what this architecture looks like and why it's important. And what are some of the key things we have to think about? So let's go back to the conversation that we had. And we were asking it to guide us through some activity, like cooking something. So we might have sent a prompt in, like, help me cook this and tell it to me one step at a time. And the AI then would come back and say, go get these ingredients. And then me, the human, I would go back and say, I'm out of beans. And then it would do what an agent does, which is it adapts, right? It is showing agency in that it is telling me what to do. It is deciding what to do. And it's adaptive in that when something goes awry, it can go and adapt and handle it in a way that, like, our existing computer systems just don't do this very well, right? We write them. They're very brittle. They can't adapt. So this is one of the key things is that when I go and say, I'm out of beans, it can come back and say, well, just skip the beans and move on. Or use this instead. Like, that's the thing that makes agents so incredible and so valuable when we build a really powerful agent, is that it can go and adapt and handle situations more robustly sometimes if we do a good job than if we just wrote code. Now, what happens when we have an agent that is working with a computer system, right? We don't want to go and have to listen to what the agent says and then go and type a bunch of stuff into a computer and then copy and paste what the agent says back in or what the computer says is the response back into the agent. Like, that's not very efficient. That's not what we want to do. So how do we move away from that? Well, what we want to do is we want to have the human or some human-driven process kick off the agent by giving it some type of task to perform. Like, help me add this travel expense. And then what we want the agent to do is to go and use the computer system, use a series of APIs, use a series of functions or whatever resources it's been given to go and complete that task. So basically to take our goal that we're stating in natural language, our hopes and dreams for the computation, and translate it into computation. We're telling it what we want, and it's translating it into computation. Now, if you think about the transformer model, one of the first things it was tested on was doing translation. It just turns out that it's really good at translating human language into computation. And it can do that in different ways. So if we were going to go and add an expense for travel, it might need to go and list the rows in a spreadsheet and then get some result back from the spreadsheet, like the rows, that it could go and look at and see, does that expense already exist? And then if it decides it doesn't, it goes and says, add a row for this. And what we want to do is basically have this sort of two-stage. The human goes and kicks off the computation or some human-driven process goes and kicks off this agent. And then it translates that goal or set of goals into a series of calls or interactions with a computer. Now, the question then becomes, how do we make it interact with the computer autonomously? We want this AI agent to be able to go and work on its own. Now, one way we could do this, obviously, is we could say, do this, and tell me how to do it, what API calls to make. And then it could output code, and I could go and copy and paste that code into my editor and run it and accomplish that. But that's not what we want. Then it's human in the loop fully, and that's not really an AI agent so much. Now, it is. It's just a human-in-the-loop AI agent. And I think what we want to look at is how do we do this where once the human has provided the task that the agent runs autonomously. Well, the way that we do that is by creating a loop. I call this an agent loop. And it's a really fairly simple thing once we wrap our heads around how it works. Now, the details of it are important, and we'll go through all the different details and ways that you can adapt the loop and do things that are really fascinating to empower your agent with all kinds of capabilities. But let's drill in on the basic loop to get started. So what happens is after we give the task to the AI, we want it to start deciding a series of actions to take, and we want to run it in a loop. So basically, we're going to run it in a loop, and what our loop is going to be is we're going to give it a prompt. It's going to generate a response which contains an action that it would like to be taken on the computer. We're going to then figure out what that action is. We're going to execute it on the computer, and we're going to give it feedback on what happened. And then we are going to keep doing this in a loop until either the agent or we decide that it should terminate. Now, we are in control of the loop. It gets to decide what the action is at each iteration of the loop. But this is the core idea. So, for example, we get a task, add travel expense. And so the first prompt is decide the first action to add the travel expense. Here are the options of things that you can do. It chooses an option. We identify what that option is, and then we programmatically, based on the response we receive, go and take that action. And then we, really importantly, add that back into the prompt for the next iteration and say, basically, what are you going to do next? Now, we don't actually have to say what are you going to do next, which is kind of fascinating. But that's the core of it. This thing right here is where we take a conversation. We take just sending a bunch of prompts, and we turn it into something autonomous that has agency that can go and do things without us. This agent loop is the key thing. We're going to prompt. We're going to get a response. We're going to turn that response into an action. We're going to execute that action in the computer. And then we're going to go and get feedback on that action. Now, in order to do that, let's look at it in a little bit more detail. What we're going to do is we're going to construct our prompt. And this is what you're going to be doing whenever you're building an agent. You're going to be building a system that does essentially these six things. Now, you're going to have maybe more stuff that's in between. If you go and use some framework or library that's already out there, underneath the hood, it's going to be doing something like this. So, we construct the prompt. This is critically important. Getting a great prompt is super important for the agent. Most of our work is going to be in creating great prompts and thinking about how do we guide our agent through prompting. Second, we're going to send that prompt off to the large language model to get a response. Then we're going to parse the response. So, this means that we have to go and think about how do we get it to produce a response in a format that we can parse and understand what it's asking us to do. Now, the key thing is that we have to be able to parse and understand it with basically our traditional software infrastructure, which is fairly rigid and brittle. And so, we have to think about building our parsing infrastructure, prompting it in a way that we can go and figure out what it wants to do and do it reliably. We're then going to, once we've gotten a programmatic representation of the action it wants to take, like an API call, we go and make that API call or whatever that action is, copy a file, whatever. And then we go and we get the result back. Now, the result could be the feedback from the API, the result, the message that comes out, the HTTP code in the body of that HTTP response. It could be an error message or an error code from the API, whatever it is, but we're going to take some feedback. We're going to turn it into a string. We're going to decide if we're going to continue the loop. And if we are, we're going to take the feedback and we're going to now construct a new prompt, typically where we take in the feedback and add it to the original prompt. And so, over time, it's basically building up a bigger and bigger prompt, and it's going and taking action. This is the most sort of basic approach, and it will take you very, very, very far. In fact, almost all the time, this is the architecture that you need. You don't need a ton of other fancy stuff. You just need this simple loop. So, we're going to go and look at and dive into this loop in more detail.